/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.*;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Familia
 */
public class InternalEditarCita extends javax.swing.JInternalFrame {
ControlCita controlCita;
  ControlPaciente controlPaciente;
  ControlAgenda controlAgenda;
  ControlMedico controlMedico;
  String fecha;
    /**
     * Creates new form InternalEditarCita
     */
    public InternalEditarCita(ControlCita controlCita,ControlPaciente controlPaciente, ControlAgenda controlAgenda,ControlMedico controlMedico) {
        this.controlCita = controlCita;
        this.controlPaciente = controlPaciente;
        this.controlAgenda = controlAgenda;
        this.controlMedico = controlMedico;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        id_paciente2 = new javax.swing.JTextField();
        editar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        consultar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        FieldCedulaMedico = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButtonConsultarDisponibilidad = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        DateChooser = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        ComboBoxHora = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        horaVieja = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        fechavieja = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setClosable(true);

        id_paciente2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_paciente2ActionPerformed(evt);
            }
        });

        editar.setText("editar");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        jLabel1.setText("Ingrese el ID del paciente del que quiere consultar las citas:");

        jLabel2.setText("ID del paciente");

        jLabel6.setText("Las citas del paciente son:");

        consultar.setText("Consultar");
        consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        FieldCedulaMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldCedulaMedicoActionPerformed(evt);
            }
        });

        jLabel3.setText("Cédula médico");

        jButtonConsultarDisponibilidad.setText("Consultar horas disponibles en tu nuevo dia");
        jButtonConsultarDisponibilidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarDisponibilidadActionPerformed(evt);
            }
        });

        jLabel4.setText("Fecha nueva");

        jLabel5.setText("Elegir hora");

        jLabel7.setText("Hora antigua");

        jLabel8.setText("Fecha antigua");

        jButton1.setText("Terminar edicion");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                            .addComponent(FieldCedulaMedico)
                            .addComponent(horaVieja)
                            .addComponent(fechavieja)))
                    .addComponent(jButtonConsultarDisponibilidad)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(38, 38, 38)
                        .addComponent(ComboBoxHora, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(FieldCedulaMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(fechavieja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(horaVieja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(DateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonConsultarDisponibilidad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBoxHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1)
                            .addComponent(editar)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(id_paciente2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(consultar))
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(id_paciente2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(consultar))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void id_paciente2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_paciente2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_paciente2ActionPerformed

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        if(this.jComboBox1.getSelectedItem()== null){
            JOptionPane.showMessageDialog(this, "Por favor elija una cita para eliminar, si no hay ninguna no tiene citas");
        }else{
            String id_paciente = this.id_paciente2.getText();
            String string= (String) this.jComboBox1.getSelectedItem();

            String[] cita = string.split("=");

            String pr= cita[1];
            String[] s= pr.split("\\.");
            String medico=s[0];
            this.FieldCedulaMedico.setText(medico);
            
            String se= cita[2];
            String[] o= se.split("\\.");
            String fecha= o[0];
            this.fechavieja.setText(fecha);

            String hora= cita[3];
            this.horaVieja.setText(hora);
            
            this.jComboBox1.setEnabled(false);
            this.FieldCedulaMedico.setEnabled(false);
            this.fechavieja.setEnabled(false);
            this.horaVieja.setEnabled(false);
            
        }
    }//GEN-LAST:event_editarActionPerformed

    private void consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarActionPerformed
        if(this.id_paciente2.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Ingrese la cédula del paciente");
        }else{
            String id_paciente = this.id_paciente2.getText();
            if(controlPaciente.verificarExistencia(id_paciente)){
                refrescar(id_paciente);
                this.consultar.setEnabled(false);
                
            }else{
                JOptionPane.showMessageDialog(this, "No existe un paciente con esa cédula");
            }

        }
    }//GEN-LAST:event_consultarActionPerformed

    private void jButtonConsultarDisponibilidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarDisponibilidadActionPerformed
        // TODO add your handling code here:
        try {
            String id_medico = this.FieldCedulaMedico.getText().trim();
            Date fecha = this.DateChooser.getDate();
            LocalDate fechaLocal = fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            LocalDate actual = LocalDate.now();

            if (fechaLocal.getDayOfWeek().toString().equals("SUNDAY")) {
                JOptionPane.showMessageDialog(this, "Los medicos no se encuentran disponibles los domingos");
            } else if (fechaLocal.isBefore(actual) || fechaLocal.isEqual(actual)) {
                JOptionPane.showMessageDialog(this, "Asegúrese de elegir un día posterior al actual");
            }else {
                String dia_cita = String.valueOf(fechaLocal.getDayOfMonth());
                String mes_cita = String.valueOf(fechaLocal.getMonthValue());
                String anio_cita = String.valueOf(fechaLocal.getYear());
                String fecha_cita = dia_cita + "-" + mes_cita + "-" + anio_cita;
                this.fecha = fecha_cita;

                this.refrescarHorarios(id_medico, fecha_cita);
                this.jButtonConsultarDisponibilidad.setEnabled(false);
                this.DateChooser.setEnabled(false);
            }

        } catch (NullPointerException npe) {
            JOptionPane.showMessageDialog(this, "Seleccione una fecha");
        }
    }//GEN-LAST:event_jButtonConsultarDisponibilidadActionPerformed

    private void FieldCedulaMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldCedulaMedicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldCedulaMedicoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      String hora_nueva = (String)this.ComboBoxHora.getSelectedItem();
      String hora_vieja = this.horaVieja.getText();
      String fecha_vieja = this.fechavieja.getText();
      JOptionPane.showMessageDialog(this, controlCita.modificarCita(this.fecha, hora_nueva, fecha_vieja , hora_vieja , this.id_paciente2.getText()));
      String id_medico = this.FieldCedulaMedico.getText().trim();      
      controlAgenda.actualizarAgenda(id_medico, this.fecha, hora_nueva);
      controlAgenda.eliminarCita(id_medico, fecha_vieja, hora_vieja);
      this.DateChooser.setEnabled(false);
      this.jButtonConsultarDisponibilidad.setEnabled(false);
      this.ComboBoxHora.setEnabled(false);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxHora;
    private com.toedter.calendar.JDateChooser DateChooser;
    private javax.swing.JTextField FieldCedulaMedico;
    private javax.swing.JButton consultar;
    private javax.swing.JButton editar;
    private javax.swing.JTextField fechavieja;
    private javax.swing.JTextField horaVieja;
    private javax.swing.JTextField id_paciente;
    private javax.swing.JTextField id_paciente1;
    private javax.swing.JTextField id_paciente2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonConsultarDisponibilidad;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables


 private void refrescar(String id_paciente) {
        ArrayList lista = controlCita.listarCitasPaciente(id_paciente);

        if (lista != null) {
            int n = lista.size();
            for (int i = 0; i < n; i++) {
                this.jComboBox1.addItem((String) lista.get(i));
            }
        }else{
            lista.add("usted no tiene ninguna cita");
            this.jComboBox1.addItem((String)lista.get(1));
        }
    }
 
     public void refrescarHorarios(String id_medico, String fecha) {
        ArrayList horas = controlAgenda.consultarAgenda(id_medico, fecha);
        this.ComboBoxHora.removeAllItems();
        for (int i = 0; i < horas.size(); i++) {
            this.ComboBoxHora.addItem((String) horas.get(i));            
        }
    }
}
