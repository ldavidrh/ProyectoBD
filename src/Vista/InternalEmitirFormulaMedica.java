/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.Date;
import Controlador.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis
 */
public class InternalEmitirFormulaMedica extends javax.swing.JInternalFrame {

    ControlFormula controlFormula;
    ControlMedico controlMedico;
    ControlPaciente controlPaciente;
    ControlMedicamento controlMedicamento;

    /**
     * Creates new form InternalEmitirFormulaMedica
     */
    public InternalEmitirFormulaMedica(ControlFormula controlFormula, ControlMedico controlMedico, ControlPaciente controlPaciente, ControlMedicamento controlMedicamento) {
        this.controlFormula = controlFormula;
        this.controlMedicamento = controlMedicamento;
        this.controlPaciente = controlPaciente;
        this.controlMedico = controlMedico;
        initComponents();
        refrescar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        FieldCedulaMedico = new javax.swing.JTextField();
        FieldCedulaPaciente = new javax.swing.JTextField();
        ComboBoxCodigoMedicamento = new javax.swing.JComboBox<>();
        ButtonEmitirFormula = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Emitir formula medica");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Codigo medicamento");

        jLabel3.setText("Cedula medico");

        jLabel4.setText("Cedula paciente");

        ButtonEmitirFormula.setText("Emitir");
        ButtonEmitirFormula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEmitirFormulaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(ComboBoxCodigoMedicamento, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addGap(38, 38, 38)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(FieldCedulaMedico)
                                .addComponent(FieldCedulaPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))))
                    .addComponent(ButtonEmitirFormula))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ComboBoxCodigoMedicamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(FieldCedulaMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(FieldCedulaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonEmitirFormula)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonEmitirFormulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEmitirFormulaActionPerformed
        String codigoFormula;
        Date fecha = new Date();
        LocalDateTime fechaLocal = fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();
        codigoFormula = Integer.toString(fechaLocal.getDayOfMonth()) + "-" + Integer.toString(fechaLocal.getMonthValue()) + "-" + Integer.toString(fechaLocal.getYear())
                + "//" + Integer.toString(fechaLocal.getHour()) + ":" + Integer.toString(fechaLocal.getMinute()) + ":" + Integer.toString(fechaLocal.getSecond());

        
        if(this.FieldCedulaMedico.getText().trim().isEmpty() || this.FieldCedulaPaciente.getText().trim().isEmpty()
           ){
            JOptionPane.showMessageDialog(this, "Existen casillas vac√≠as");
        }else{
            String id_medico = this.FieldCedulaMedico.getText();
            String id_paciente = this.FieldCedulaPaciente.getText();
            String id_medicamento= (String)this.ComboBoxCodigoMedicamento.getSelectedItem();
            if(controlPaciente.verificarExistencia(id_paciente) && controlMedico.verificarExistencia(id_medico)){
                JOptionPane.showMessageDialog(this, controlFormula.insertarFormula(codigoFormula,id_medicamento, id_medico, id_paciente));
            }else{
                JOptionPane.showMessageDialog(this, "el numero de paciente o el numero del medico no existen");
            }
            
                       
        }
    }//GEN-LAST:event_ButtonEmitirFormulaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonEmitirFormula;
    private javax.swing.JComboBox<String> ComboBoxCodigoMedicamento;
    private javax.swing.JTextField FieldCedulaMedico;
    private javax.swing.JTextField FieldCedulaPaciente;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    private void refrescar() {
        ArrayList lista = controlMedicamento.listarMedicamentos();

        if (lista != null) {
            int n = lista.size();
            for (int i = 0; i < n; i++) {
                this.ComboBoxCodigoMedicamento.addItem((String) lista.get(i));
            }
        }
    }
}
